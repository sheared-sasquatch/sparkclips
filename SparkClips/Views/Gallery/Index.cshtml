﻿@model IEnumerable<SparkClips.Models.HairyDatabase.GalleryEntry>

@{
    ViewData["Title"] = "Gallery";
}

@section Scripts {
    <script src="~/js/gallery.js" asp-append-version="true"></script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/gallery.css" />
}



@if ((bool)ViewData["logged_in"]) {

<ul class="nav nav-tabs" >
    <li class="active" style="width: 50%;"><a data-toggle="tab" href="#galleryView">Gallery</a></li>
    <li style="width: 50%;"><a data-toggle="tab" href="#favoriteView">Favorites</a></li>
</ul>

<div id="contentView" class="tab-content">
    <div id="galleryView" class="row tab-pane fade in active">
        <div class="col-md-12">
            <h3 class="pageTitle">Gallery</h3>
            <div class="flex-row">

                @foreach (var item in Model)
                {
                    @if (!item.Filter)
                    {
                        <div class="flex-column card" style="width: 20rem;">
                            <img class="card-img-top" src="@Html.DisplayFor(x => item.Thumbnail)" alt="@Html.DisplayFor(model => item.Title)">
                            <div class="card-block">
                                <h4 class="card-title">@Html.DisplayFor(model => item.Title) (@Html.DisplayFor(model => item.Likes) likes)</h4>
                                <p class="card-text">@Html.DisplayFor(model => item.Description)</p>
                                <a asp-action="Detail" asp-route-id="@item.GalleryEntryID" class="btn btn-primary">View</a>
                                @if ((bool)ViewData["logged_in"])
                                {
                                    <button id="@item.GalleryEntryID"
                                            class="btn btn-primary glyphicon glyphicon-star @(item.Faved ? "alreadyFaved" : "notFaved")"></button>
                                }
                            </div>
                        </div>
                    }

                }

            </div>
        </div>
    </div>
    <div id="favoriteView" class="tab-pane fade">
        <div class="col-md-12">
            <h3 class="pageTitle">Gallery</h3>
            <div class="flex-row">

                @foreach (var item in Model)
                {
                    @if(item.Faved) {
                        <div class="flex-column card">
                            <img class="card-img-top" src="@Html.DisplayFor(x => item.Thumbnail)" alt="@Html.DisplayFor(model => item.Title)">
                            <div class="card-block">
                                <h4 class="card-title">@Html.DisplayFor(model => item.Title) (@Html.DisplayFor(model => item.Likes) likes)</h4>
                                <p class="card-text">@Html.DisplayFor(model => item.Description)</p>
                                <a asp-action="Detail" asp-route-id="@item.GalleryEntryID" class="btn btn-primary">View</a>
                                @if ((bool)ViewData["logged_in"])
                                {
                                    <button id="@item.GalleryEntryID"
                                            class="btn btn-primary glyphicon glyphicon-star @(item.Faved ? "alreadyFaved" : "notFaved")"></button>
                                }

                            </div>
                        </div>
                    }
                }

            </div>
        </div>
    </div>
</div>
} else {
    <h3 class="pageTitle">@ViewData["Title"]</h3>
                @foreach (var item in Model)
                {
                    @if (!item.Filter)
                    {
                        <div class="flex-column card" style="width: 20rem;">
                            <img class="card-img-top" src="@Html.DisplayFor(x => item.Thumbnail)" alt="@Html.DisplayFor(model => item.Title)">
                            <div class="card-block">
                                <h4 class="card-title">@Html.DisplayFor(model => item.Title) (@Html.DisplayFor(model => item.Likes) likes)</h4>
                                <p class="card-text">@Html.DisplayFor(model => item.Description)</p>
                                <a asp-action="Detail" asp-route-id="@item.GalleryEntryID" class="btn btn-primary">View</a>
                                @if ((bool)ViewData["logged_in"])
                                {
                                    <button id="@item.GalleryEntryID"
                                            class="btn btn-primary glyphicon glyphicon-star @(item.Faved ? "alreadyFaved" : "notFaved")"></button>
                                }
                            </div>
                        </div>
                    }

                }
}



<nav class="navbar navbar-inverse navbar-fixed-bottom dynamicFilter" role="navigation">
    <div class="container-fluid">
        <div class="navbar-header" id="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" id="navbar-toggle" data-target="#bs-example-navbar-collapse-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Filter</a>
        </div>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
            <ul class="nav navbar-nav bottomFilter">
                <h2>Tags</h2>

                    <form id="tag-form" action="/Gallery" method="get">
                        @*Loop over list of tuples, need to cast first*@
                        @foreach (var tag in (IEnumerable<Tuple<int, string, bool>>)ViewData["tags"])
                        {
                            <div class="checkbox">
                                <label>
                                    @if (tag.Item3)
                                    {
                                        <input type="checkbox" name="tags" value="@tag.Item1" checked/>@tag.Item2
                                    }
                                    else
                                    {
                                        <input type="checkbox" name="tags" value="@tag.Item1" />@tag.Item2
                                    }
                                </label>
                            </div>
                        }
         
                        <button type="submit" class="btn btn-default">Submit</button>
                    </form>


            </ul>
        </div>
    </div>
</nav>